{
"version":3,
"file":"compile/router.js",
"lineCount":85,
"mappings":"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",
"sources":["node_modules/tty/index.js","node_modules/util/index.js","node_modules/@idio/debug/src/ms.js","node_modules/@idio/debug/src/bytes.js","node_modules/erte/src/index.js","node_modules/@idio/debug/src/modifiers/f.js","node_modules/@idio/debug/src/node.js","node_modules/@idio/debug/src/common.js","node_modules/@idio/debug/src/index.js","node_modules/@goa/compose/src/index.js","node_modules/@goa/statuses/src/codes.js","node_modules/@goa/statuses/src/index.js","node_modules/@goa/http-errors/src/index.js","node_modules/http/index.js","src/path-to-regexp.js","src/layer.js","node_modules/querystring/index.js","src/index.js","src/depack.js"],
"sourcesContent":["export default tty\nexport const {\n  ReadStream,\n  WriteStream,\n  isatty,\n} = tty","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar w = d * 7\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {string|number} val\n * @param {Object} [options]\n */\nexport default function(val, options = {}) {\n  var type = typeof val\n  if (type == 'string' && val.length > 0) {\n    const t = /** @type {string} */ (val)\n    return parse(t)\n  } else if (type == 'number' && isFinite(val)) {\n    const n = /** @type {number} */ (val)\n    return options.long ? fmtLong(n) : fmtShort(n)\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  )\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {string} str\n * @api private\n */\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 100) {\n    return\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  )\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n  case 'years':\n  case 'year':\n  case 'yrs':\n  case 'yr':\n  case 'y':\n    return n * y\n  case 'weeks':\n  case 'week':\n  case 'w':\n    return n * w\n  case 'days':\n  case 'day':\n  case 'd':\n    return n * d\n  case 'hours':\n  case 'hour':\n  case 'hrs':\n  case 'hr':\n  case 'h':\n    return n * h\n  case 'minutes':\n  case 'minute':\n  case 'mins':\n  case 'min':\n  case 'm':\n    return n * m\n  case 'seconds':\n  case 'second':\n  case 'secs':\n  case 'sec':\n  case 's':\n    return n * s\n  case 'milliseconds':\n  case 'millisecond':\n  case 'msecs':\n  case 'msec':\n  case 'ms':\n    return n\n  default:\n    return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day')\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour')\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute')\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second')\n  }\n  return ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')\n}\n\n/**\n * @license\n * Copyright (c) 2016 Zeit, Inc.\n * https://npmjs.org/ms\n */","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\nconst formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g\nconst formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/\n\nconst map = {\n  'b':  1,\n  'kb': 1 << 10,\n  'mb': 1 << 20,\n  'gb': 1 << 30,\n  'tb': Math.pow(1024, 4),\n  'pb': Math.pow(1024, 5),\n}\n\nconst parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: (string|undefined),\n *  decimalPlaces: (number|undefined),\n *  fixedDecimals: (boolean|undefined),\n *  thousandsSeparator: (string|undefined),\n *  unitSeparator: (string|undefined),\n *  }} [options] bytes options.\n *\n * @returns {?(string|number)}\n */\n\nexport default function bytes(value, options) {\n  if (typeof value == 'string') {\n    return parse(value)\n  }\n\n  if (typeof value == 'number') {\n    return format(value, options)\n  }\n\n  return null\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {Object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n * @returns {?string}\n */\nexport function format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null\n  }\n\n  const mag = Math.abs(value)\n  const thousandsSeparator = (options && options.thousandsSeparator) || ''\n  const unitSeparator = (options && options.unitSeparator) || ''\n  const decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2\n  const fixedDecimals = Boolean(options && options.fixedDecimals)\n  let unit = (options && options.unit) || ''\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map['pb']) {\n      unit = 'PB'\n    } else if (mag >= map['tb']) {\n      unit = 'TB'\n    } else if (mag >= map['gb']) {\n      unit = 'GB'\n    } else if (mag >= map['mb']) {\n      unit = 'MB'\n    } else if (mag >= map['kb']) {\n      unit = 'KB'\n    } else {\n      unit = 'B'\n    }\n  }\n\n  const val = value / map[unit.toLowerCase()]\n  let str = val.toFixed(decimalPlaces)\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1')\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator)\n  }\n\n  return str + unitSeparator + unit\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nexport function parse(val) {\n  if (typeof val == 'number' && !isNaN(val)) {\n    return val\n  }\n\n  if (typeof val != 'string') {\n    return null\n  }\n\n  // Test if the string passed is valid\n  const results = parseRegExp.exec(val)\n  let floatValue, unit = 'b'\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10)\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1])\n    unit = results[4].toLowerCase()\n  }\n\n  return Math.floor(map[unit] * floatValue)\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import { format } from '../bytes'\nimport { c } from 'erte'\n\nexport default {\n  'f': format,\n  'fy'(v) {\n    return c(format(v) || '', 'yellow')\n  },\n  'fr'(v) {\n    return c(format(v) || '', 'red')\n  },\n  'fb'(v) {\n    return c(format(v) || '', 'blue')\n  },\n  'fg'(v) {\n    return c(format(v) || '', 'green')\n  },\n  'fc'(v) { return c(format(v) || '', 'cyan') },\n  'fm'(v) { return c(format(v) || '', 'magenta') },\n}\n","import tty from 'tty'\nimport { inspect, format } from 'util'\nimport ms from './ms'\nimport f from './modifiers/f'\n\nconst colors = [6, 2, 3, 4, 5, 1]\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\nconst inspectOpts = Object.keys(process.env).filter(key => {\n  return /^debug_/i.test(key)\n}).reduce((obj, key) => {\n  // Camel-case\n  const prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, (_, k) => {\n      return k.toUpperCase()\n    })\n\n  // Coerce string value into JS value\n  let val = process.env[key]\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false\n  } else if (val === 'null') {\n    val = null\n  } else {\n    val = Number(val)\n  }\n\n  obj[prop] = val\n  return obj\n}, {})\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\nfunction useColors() {\n  return 'colors' in inspectOpts ?\n    Boolean(inspectOpts['colors']) :\n    tty.isatty(process.stderr.fd)\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n * @param {!Array} args\n * @this {_debug.DebugFunction}\n */\nfunction formatArgs(args) {\n  const { namespace, useColors: uc, color, diff } = this\n\n  if (uc) {\n    const c = color\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c)\n    const prefix = `  ${colorCode};1m${namespace} \\u001B[0m`\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix)\n    args.push(colorCode + 'm+' + ms(diff) + '\\u001B[0m')\n  } else {\n    args[0] = getDate() + namespace + ' ' + args[0]\n  }\n}\n\nfunction getDate() {\n  if (inspectOpts['hideDate']) {\n    return ''\n  }\n  return new Date().toISOString() + ' '\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\nfunction log(...args) {\n  return process.stderr.write(format(...args) + '\\n')\n}\n\n/**\n * Save `namespaces`.\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env['DEBUG'] = namespaces\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env['DEBUG']\n  }\n}\n\n/**\n * Load `namespaces`.\n * @return {string} returns the previously persisted debug modes\n */\n\nfunction load() {\n  return process.env['DEBUG']\n}\n\n/**\n * Init logic for `debug` instances.\n * @param {_debug.DebugFunction} debug\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = { ...inspectOpts }\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst o = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n    .replace(/\\s*\\n\\s*/g, ' ')\n}\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst O = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n}\n\nconst formatters = { 'o': o, 'O': O, ...f }\n\n/** @type {_debug.Env} */\nconst NodeEnv = {\n  init,\n  log,\n  formatArgs,\n  save,\n  load,\n  useColors,\n  colors,\n  inspectOpts,\n  formatters,\n}\n\nexport default NodeEnv\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Env} _debug.Env\n */","class Debug {\n  /**\n   * Create a debugger with the given `namespace`.\n   * @param {_debug.Env} env\n   */\n  constructor(env) {\n    this.colors = env.colors\n    this.formatArgs = env.formatArgs\n    this.inspectOpts = env.inspectOpts\n    this.log = env.log\n    this.save = env.save\n    this.init = env.init\n\n    this.formatters = env.formatters || {}\n\n    /**\n     * Active `debug` instances.\n     * @type {Array<_debug.DebugFunction>}\n     */\n    this.instances = []\n    /**\n\t   * The currently active debug mode names.\n     * @type {Array<!RegExp>}\n\t   */\n    this.names = []\n    /**\n\t   * The currently active names to skip.\n     * @type {Array<!RegExp>}\n\t   */\n    this.skips = []\n  }\n  createDebug() {\n    const debug = this.getDebug()\n\n    // env-specific initialization logic for debug instances\n    if (typeof this.init == 'function') {\n      this.init(debug)\n    }\n\n    this.instances.push(debug)\n    return debug\n  }\n\n  /**\n   * @returns {_debug.DebugFunction}\n   */\n  getDebug() {\n    const formatters = this.formatters\n    const formatArgs = this.formatArgs\n    const log = this.log // comes from the env\n\n    /** @type {number} */\n    let prevTime\n    /** @type {_debug.DebugFunction} */\n    function debug(...args) {\n      if (!debug.enabled) return\n\n      // Set `diff` timestamp\n      const curr = Number(new Date())\n      const time = curr - (prevTime || curr)\n      debug.diff = time\n      debug.prev = prevTime\n      debug.curr = curr\n      prevTime = curr\n\n      args[0] = coerce(args[0])\n\n      if (typeof args[0] != 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O')\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0\n      args[0] = args[0].replace(/%([a-zA-Z%]+)/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match == '%%') {\n          return match\n        }\n        index++\n        const formatter = formatters[format]\n        if (formatter) {\n          const val = args[index]\n          match = formatter.call(debug, val)\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1)\n          index--\n        }\n        return match\n      })\n\n      // Apply env-specific formatting (colors, etc.)\n      formatArgs.call(debug, args)\n\n      const logFn = debug.log || log\n      logFn.apply(debug, args)\n    }\n    return debug\n  }\n  /**\n\t * Selects a color for a debug namespace\n\t * @param {string} namespace The namespace string for the for the debug instance to be colored\n\t * @return {number|string} An ANSI color code for the given namespace\n\t */\n  selectColor(namespace) {\n    let hash = 0\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = ((hash << 5) - hash) + namespace.charCodeAt(i)\n      hash |= 0 // Convert to 32bit integer\n    }\n\n    return this.colors[Math.abs(hash) % this.colors.length]\n  }\n  /**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {string} namespaces\n\t * @api public\n\t */\n  enable(namespaces) {\n    this.save(namespaces)\n\n    this.names = []\n    this.skips = []\n\n    let i\n    const split = (typeof namespaces == 'string' ? namespaces : '').split(/[\\s,]+/)\n    const len = split.length\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?')\n\n      if (namespaces[0] == '-') {\n        this.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))\n      } else {\n        this.names.push(new RegExp('^' + namespaces + '$'))\n      }\n    }\n\n    for (i = 0; i < this.instances.length; i++) {\n      const instance = this.instances[i]\n      instance.enabled = this.enabled(instance.namespace)\n    }\n  }\n  destroy(debug) {\n    const index = this.instances.indexOf(debug)\n    if (index !== -1) {\n      this.instances.splice(index, 1)\n      return true\n    }\n    return false\n  }\n  /**\n\t * Disable debug output.\n\t * @return {string} namespaces\n\t */\n  disable() {\n    const namespaces = [\n      ...this.names.map(toNamespace),\n      ...this.skips.map(toNamespace).map(namespace => '-' + namespace),\n    ].join(',')\n    this.enable('')\n    return namespaces\n  }\n  /**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n  enabled(name) {\n    if (name[name.length - 1] == '*') {\n      return true\n    }\n\n    let i\n    let len\n\n    for (i = 0, len = this.skips.length; i < len; i++) {\n      if (this.skips[i].test(name)) {\n        return false\n      }\n    }\n\n    for (i = 0, len = this.names.length; i < len; i++) {\n      if (this.names[i].test(name)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * @param {string} namespace\n * @this {_debug.DebugContext}\n */\nfunction extend(namespace, delimiter) {\n\n}\n\n/**\n * This is the common logic for both the Node.js and web browser implementations of `debug()`.\n * @param {_debug.Env} env\n */\nexport default function setup(env) {\n  const instance = new Debug(env)\n\n  /**\n   * Creates a function to log messages.\n   * @param {string} namespace\n   */\n  function createDebug(namespace) {\n    const debug = instance.createDebug()\n\n    debug.namespace = namespace\n    debug.useColors = env.useColors()\n    debug.enabled = instance.enabled(namespace)\n    debug.color = instance.selectColor(namespace)\n    /** @this {_debug.DebugContext} */\n    debug.destroy = function() {\n      instance.destroy(this)\n    }\n    /** @this {_debug.DebugContext} */\n    debug.extend = function(ns, delimiter) {\n      const newDebug = (this.namespace + (delimiter === undefined ? ':' : delimiter) + ns)\n      newDebug.log = this.log // don't know why this is here\n      return newDebug\n    }\n\n    instance.enable(env.load())\n\n    return debug\n  }\n  return createDebug\n}\n\n/**\n * Convert regexp to namespace.\n *\n * @param {!RegExp} regexp\n * @return {string} namespace\n * @private\n */\nfunction toNamespace(regexp) {\n  return regexp.toString()\n    .substring(2, regexp.toString().length - 2)\n    .replace(/\\.\\*\\?$/, '*')\n}\n\n/**\n * Coerce `val`.\n * @param {!Error|*} val\n * @return {*}\n * @private\n */\nfunction coerce(val) {\n  if (val instanceof Error) {\n    return val.stack || val.message\n  }\n  return val\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Env} _debug.Env\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugContext} _debug.DebugContext\n */","import NodeEnv from './node'\nimport setup from './common'\n\n/**\n * Creates a function to log messages.\n * @param {string} namespace\n */\nexport default function(namespace) {\n  if (!namespace) throw new Error('To use debug, pass the namespace.')\n  const node = setup(NodeEnv)\n  const debug = node(namespace)\n  return debug\n}","/**\n * Compose `middleware` returning a fully valid middleware comprised of all those which are passed.\n * @param {!Array<!Function>} middleware\n */\nexport default function compose(middleware) {\n  if (!Array.isArray(middleware))\n    throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn != 'function')\n      throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  return (context, next) => {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n\n    function dispatch(i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i == middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n\n/**\n * @license MIT\n * (c) dead-horse\n * https://npmjs.org/koa-compose\n */","export default {\n  [100]: 'Continue',\n  [101]: 'Switching Protocols',\n  [102]: 'Processing',\n  [103]: 'Early Hints',\n  [200]: 'OK',\n  [201]: 'Created',\n  [202]: 'Accepted',\n  [203]: 'Non-Authoritative Information',\n  [204]: 'No Content',\n  [205]: 'Reset Content',\n  [206]: 'Partial Content',\n  [207]: 'Multi-Status',\n  [208]: 'Already Reported',\n  [226]: 'IM Used',\n  [300]: 'Multiple Choices',\n  [301]: 'Moved Permanently',\n  [302]: 'Found',\n  [303]: 'See Other',\n  [304]: 'Not Modified',\n  [305]: 'Use Proxy',\n  [306]: '(Unused)',\n  [307]: 'Temporary Redirect',\n  [308]: 'Permanent Redirect',\n  [400]: 'Bad Request',\n  [401]: 'Unauthorized',\n  [402]: 'Payment Required',\n  [403]: 'Forbidden',\n  [404]: 'Not Found',\n  [405]: 'Method Not Allowed',\n  [406]: 'Not Acceptable',\n  [407]: 'Proxy Authentication Required',\n  [408]: 'Request Timeout',\n  [409]: 'Conflict',\n  [410]: 'Gone',\n  [411]: 'Length Required',\n  [412]: 'Precondition Failed',\n  [413]: 'Payload Too Large',\n  [414]: 'URI Too Long',\n  [415]: 'Unsupported Media Type',\n  [416]: 'Range Not Satisfiable',\n  [417]: 'Expectation Failed',\n  [418]: 'I\\'m a teapot',\n  [421]: 'Misdirected Request',\n  [422]: 'Unprocessable Entity',\n  [423]: 'Locked',\n  [424]: 'Failed Dependency',\n  [425]: 'Unordered Collection',\n  [426]: 'Upgrade Required',\n  [428]: 'Precondition Required',\n  [429]: 'Too Many Requests',\n  [431]: 'Request Header Fields Too Large',\n  [451]: 'Unavailable For Legal Reasons',\n  [500]: 'Internal Server Error',\n  [501]: 'Not Implemented',\n  [502]: 'Bad Gateway',\n  [503]: 'Service Unavailable',\n  [504]: 'Gateway Timeout',\n  [505]: 'HTTP Version Not Supported',\n  [506]: 'Variant Also Negotiates',\n  [507]: 'Insufficient Storage',\n  [508]: 'Loop Detected',\n  [509]: 'Bandwidth Limit Exceeded',\n  [510]: 'Not Extended',\n  [511]: 'Network Authentication Required',\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\nimport statusCodes from './codes'\n\n// status code to message map\nexport const STATUS_CODES = statusCodes\n\n// array of status codes\nexport const codes = populateStatusesMap(status, statusCodes)\n\n// status codes for redirects\nexport const redirect = {\n  [300]: true,\n  [301]: true,\n  [302]: true,\n  [303]: true,\n  [305]: true,\n  [307]: true,\n  [308]: true,\n}\n\n// status codes for empty bodies\nexport const empty = {\n  [204]: true,\n  [205]: true,\n  [304]: true,\n}\n\n// status codes for when you should retry the request\nexport const retry = {\n  [502]: true,\n  [503]: true,\n  [504]: true,\n}\n\n/**\n * Populate the statuses map for given codes.\n * @return {!Array<string>}\n * @private\n */\nfunction populateStatusesMap(statuses, allCodes) {\n  const arr = []\n\n  Object.keys(allCodes).forEach((code) => {\n    const message = statusCodes[code]\n    const s = Number(code)\n\n    // Populate properties\n    statuses[s] = message\n    statuses[message] = s\n    statuses[message.toLowerCase()] = s\n\n    // Add to array\n    arr.push(s)\n  })\n\n  return arr\n}\n\n/**\n * @param {string|number} code\n */\nexport default function status(code) {\n  if (typeof code == 'number') {\n    if (!status[code])\n      throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code != 'string')\n    throw new TypeError('code must be a number or string')\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport statuses, { codes } from '@goa/statuses'\n\nconst deprecate = (msg) => {\n  process.emitWarning(msg, 'DeprecationWarning')\n}\n\n/**\n * Get the code class of a status code.\n * @private\n */\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n * @param {...Error|string|number} args\n */\nexport default function createError(...args) {\n  // so much arity going on ~_~\n  let err\n  let msg\n  let status = 500\n  let props = {}\n  for (let i = 0; i < args.length; i++) {\n    let arg = args[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n    case 'string':\n      msg = arg\n      break\n    case 'number':\n      status = arg\n      if (i !== 0) {\n        deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n      }\n      break\n    case 'object':\n      props = arg\n      break\n    }\n  }\n\n  if (typeof status == 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status != 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  const HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (let key in props) {\n    if (key != 'status' && key != 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * @implements {_httpErrors.HttpError}\n */\nexport class HttpError extends Error {\n  constructor(message) {\n    super()\n    this.message = message\n    this.status = null\n    this.statusCode = null\n    this.expose = false\n    this.headers = null\n  }\n  set code(code) {\n    this.status = code\n    this.statusCode = code\n    if (!this.message) this.message = statuses[code]\n  }\n}\n\ncodes.forEach((code) => {\n  let CodeError\n  const name = toIdentifier(statuses[code])\n  const className = name.match(/Error$/) ? name : name + 'Error'\n\n  switch (codeClass(code)) {\n  case 400:\n    CodeError = class ClientError extends HttpError {\n      constructor(message) {\n        super(message)\n        this.code = code\n        this.name = className\n        this.expose = true\n      }\n    }\n    break\n  case 500:\n    CodeError = class ServerError extends HttpError {\n      constructor(message) {\n        super(message)\n        this.code = code\n        this.name = className\n        this.expose = false\n      }\n    }\n    break\n  }\n\n  if (CodeError) {\n    // export the constructor\n    createError[code] = CodeError\n    createError[name] = CodeError\n  }\n}, {})\n\n\n\n/**\n * Transform the given string into a JavaScript identifier\n * @param {string} str\n */\nfunction toIdentifier(str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n\n/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */","export default http\nexport const {\n  Agent,\n  ClientRequest,\n  IncomingMessage,\n  METHODS,\n  OutgoingMessage,\n  STATUS_CODES,\n  Server,\n  ServerResponse,\n  createServer,\n  get,\n  globalAgent,\n  maxHeaderSize,\n  request,\n} = http","/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n  const tokens = []\n  let i = 0\n\n  while (i < str.length) {\n    const char = str[i]\n\n    if (char === '*' || char === '+' || char === '?') {\n      tokens.push({ type: 'MODIFIER', index: i, value: str[i++] })\n      continue\n    }\n\n    if (char === '\\\\') {\n      tokens.push({ type: 'ESCAPED_CHAR', index: i++, value: str[i++] })\n      continue\n    }\n\n    if (char === '{') {\n      tokens.push({ type: 'OPEN', index: i, value: str[i++] })\n      continue\n    }\n\n    if (char === '}') {\n      tokens.push({ type: 'CLOSE', index: i, value: str[i++] })\n      continue\n    }\n\n    if (char === ':') {\n      let name = ''\n      let j = i + 1\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j)\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++]\n          continue\n        }\n\n        break\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`)\n\n      tokens.push({ type: 'NAME', index: i, value: name })\n      i = j\n      continue\n    }\n\n    if (char === '(') {\n      let count = 1\n      let pattern = ''\n      let j = i + 1\n\n      if (str[j] === '?') {\n        throw new TypeError(`Pattern cannot start with '?' at ${j}`)\n      }\n\n      while (j < str.length) {\n        if (str[j] === '\\\\') {\n          pattern += str[j++] + str[j++]\n          continue\n        }\n\n        if (str[j] === ')') {\n          count--\n          if (count === 0) {\n            j++\n            break\n          }\n        } else if (str[j] === '(') {\n          count++\n          if (str[j + 1] !== '?') {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`)\n          }\n        }\n\n        pattern += str[j++]\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`)\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`)\n\n      tokens.push({ type: 'PATTERN', index: i, value: pattern })\n      i = j\n      continue\n    }\n\n    tokens.push({ type: 'CHAR', index: i, value: str[i++] })\n  }\n\n  tokens.push({ type: 'END', index: i, value: '' })\n\n  return tokens\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options = {}) {\n  const tokens = lexer(str)\n  const { prefixes = './' } = options\n  const defaultPattern = `[^${escapeString(options.delimiter || '/#?')}]+?`\n  const result = []\n  let key = 0\n  let i = 0\n  let path = ''\n\n  const tryConsume = (type) => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value\n  }\n\n  const mustConsume = (type) => {\n    const value = tryConsume(type)\n    if (value !== undefined) return value\n    const { type: nextType, index } = tokens[i]\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`)\n  }\n\n  const consumeText = () => {\n    let result = ''\n    let value\n    // tslint:disable-next-line\n    while ((value = tryConsume('CHAR') || tryConsume('ESCAPED_CHAR'))) {\n      result += value\n    }\n    return result\n  }\n\n  while (i < tokens.length) {\n    const char = tryConsume('CHAR')\n    const name = tryConsume('NAME')\n    const pattern = tryConsume('PATTERN')\n\n    if (name || pattern) {\n      let prefix = char || ''\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix\n        prefix = ''\n      }\n\n      if (path) {\n        result.push(path)\n        path = ''\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: '',\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume('MODIFIER') || '',\n      })\n      continue\n    }\n\n    const value = char || tryConsume('ESCAPED_CHAR')\n    if (value) {\n      path += value\n      continue\n    }\n\n    if (path) {\n      result.push(path)\n      path = ''\n    }\n\n    const open = tryConsume('OPEN')\n    if (open) {\n      const prefix = consumeText()\n      const name = tryConsume('NAME') || ''\n      const pattern = tryConsume('PATTERN') || ''\n      const suffix = consumeText()\n\n      mustConsume('CLOSE')\n\n      result.push({\n        name: name || (pattern ? key++ : ''),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume('MODIFIER') || '',\n      })\n      continue\n    }\n\n    mustConsume('END')\n  }\n\n  return result\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(\n  tokens,\n  options = {}\n) {\n  const reFlags = flags(options)\n  const { encode = (x) => x, validate = true } = options\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map(token => {\n    if (typeof token === 'object') {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags)\n    }\n  })\n\n  return (data) => {\n    let path = ''\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      const value = data ? data[token.name] : undefined\n      const optional = token.modifier === '?' || token.modifier === '*'\n      const repeat = token.modifier === '*' || token.modifier === '+'\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected '${token.name}' to not repeat, but got an array`\n          )\n        }\n\n        if (value.length === 0) {\n          if (optional) continue\n\n          throw new TypeError(`Expected '${token.name}' to not be empty`)\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(\n              `Expected all '${token.name}' to match '${token.pattern}', but got '${segment}'`\n            )\n          }\n\n          path += token.prefix + segment + token.suffix\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        const segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError(\n            `Expected '${token.name}' to match '${token.pattern}', but got '${segment}'`\n          )\n        }\n\n        path += token.prefix + segment + token.suffix\n        continue\n      }\n\n      if (optional) continue\n\n      const typeOfMessage = repeat ? 'an array' : 'a string'\n      throw new TypeError(`Expected '${token.name}' to be ${typeOfMessage}`)\n    }\n\n    return path\n  }\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(\n  str,\n  options,\n) {\n  const keys = []\n  const re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys, options)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(\n  re,\n  keys,\n  options = {},\n) {\n  const { decode = (x) => x } = options\n\n  return function(pathname) {\n    const m = re.exec(pathname)\n    if (!m) return false\n\n    const { 0: path, index } = m\n    const params = Object.create(null)\n\n    for (let i = 1; i < m.length; i++) {\n      // tslint:disable-next-line\n      if (m[i] === undefined) continue\n\n      const key = keys[i - 1]\n\n      if (key.modifier === '*' || key.modifier === '+') {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(value => {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path, index, params }\n  }\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options = {}) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n * @param {!RegExp} path\n * @param {!Array<!Object>} keys\n */\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  const groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (let i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: '',\n        suffix: '',\n        modifier: '',\n        pattern: '',\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths,\n  keys,\n  options,\n) {\n  const parts = paths.map(path => pathToRegexp(path, keys, options).source)\n  return new RegExp(`(?:${parts.join('|')})`, flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n * @param {string} path\n */\nfunction stringToRegexp(\n  path,\n  keys,\n  options,\n) {\n  return tokensToRegexp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens,\n  keys,\n  options = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x) => x,\n  } = options\n  const endsWith = `[${escapeString(options.endsWith || '')}]|$`\n  const delimiter = `[${escapeString(options.delimiter || '/#?')}]`\n  let route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token == 'string') {\n      route += escapeString(encode(token))\n    } else {\n      const prefix = escapeString(encode(token.prefix))\n      const suffix = escapeString(encode(token.suffix))\n\n      if (token.pattern) {\n        if (keys) keys.push(token)\n\n        if (prefix || suffix) {\n          if (token.modifier == '+' || token.modifier == '*') {\n            const mod = token.modifier == '*' ? '?' : ''\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`\n          }\n        } else {\n          route += `(${token.pattern})${token.modifier}`\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiter}?`\n\n    route += !options.endsWith ? '$' : `(?=${endsWith})`\n  } else {\n    const endToken = tokens[tokens.length - 1]\n    const isEndDelimited =\n      typeof endToken === 'string'\n        ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n        : // tslint:disable-next-line\n        endToken === undefined\n\n    if (!strict) {\n      route += `(?:${delimiter}(?=${endsWith}))?`\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiter}|${endsWith})`\n    }\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport default function pathToRegexp(\n  path,\n  keys,\n  options,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys)\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options)\n  return stringToRegexp(path, keys, options)\n}\n\n/*!\n * path-to-regexp\n * The MIT License (MIT)\n * Copyright (c) 2014 Blake Embrey (hello@blakeembrey.com)\n */","import Debug from '@idio/debug'\nimport pathToRegExp, { compile, parse } from './path-to-regexp'\nimport { stringify } from 'querystring'\n\nconst debug = Debug('koa-router')\n\n/**\n * @implements {_goa.Layer}\n */\nexport default class Layer {\n  /**\n   * Initialize a new routing Layer with given `method`, `path`, and `middleware`.\n   *\n   * @param {string|!RegExp} path Path string or regular expression.\n   * @param {!Array<string>} methods Array of HTTP verbs.\n   * @param {!_goa.Middleware|!Array<!_goa.Middleware>} middleware Layer callback/middleware or series of.\n   * @param {!_goa.LayerConfig} [opts] The options.\n   */\n  constructor(path, methods, middleware, opts = {}) {\n    const { name = null } = opts\n    this.opts = opts\n    /**\n     * @type {string|null}\n     */\n    this.name = name\n    /**\n     * @type {!Array<string>}\n     */\n    this.methods = []\n    this.paramNames = []\n    this.stack = Array.isArray(middleware) ? middleware : [middleware]\n\n    methods.forEach((method) => {\n      const l = this.methods.push(method.toUpperCase())\n      if (this.methods[l-1] == 'GET') {\n        this.methods.unshift('HEAD')\n      }\n    })\n\n    // ensure middleware is a function\n    this.stack.forEach((fn) => {\n      const type = typeof fn\n      if (type != 'function') {\n        throw new Error(\n          methods.toString() + \" `\" + (name || path) +\"`: `middleware` \"\n          + \"must be a function, not `\" + type + \"`\"\n        )\n      }\n    })\n\n    this.path = path\n    this.regexp = pathToRegExp(\n      typeof path == 'string' ? path.replace(/\\/$/, '') : path,\n      this.paramNames, this.opts)\n\n    debug('defined route %s %s', this.methods, this.opts.prefix + this.path)\n  }\n  /**\n   * Returns whether request `path` matches route.\n   * @param {string} path\n   */\n  match(path) {\n    return this.regexp.test(path)\n  }\n\n  /**\n   * Returns map of URL parameters for given `path` and `paramNames`.\n   * @param {string} path\n   * @param {!Array<string>} captures\n   * @param {!Object} [params]\n   */\n  params(path, captures, params = {}) {\n    for (let len = captures.length, i=0; i<len; i++) {\n      if (this.paramNames[i]) {\n        const c = captures[i]\n        params[this.paramNames[i].name] = c ? safeDecodeURIComponent(c) : c\n      }\n    }\n\n    return params\n  }\n  /**\n   * Returns array of regexp url path captures.\n   * @param {string} path\n   */\n  captures(path) {\n    if (this.opts.ignoreCaptures) return []\n    return path.match(this.regexp).slice(1)\n  }\n  /**\n   * Generate URL for route using given `params`.\n   *\n   * @example\n   *\n   * ```javascript\n   * var route = new Layer(['GET'], '/users/:id', fn);\n   *\n   * route.url({ id: 123 }); // => \"/users/123\"\n   * ```\n   *\n   * @param {!Object|string} params url parameters\n   * @param {!Object|string} options\n   */\n  url(params, options) {\n    let args = params\n    const url = this.path.replace(/\\(\\.\\*\\)/g, '')\n    const toPath = compile(url, {\n      encode: encodeURIComponent,\n    })\n    let replaced\n\n    if (typeof params != 'object') {\n      args = [...arguments]\n      if (typeof args[args.length - 1] == 'object') {\n        options = args[args.length - 1]\n        args = args.slice(0, args.length - 1)\n      }\n    }\n\n    const tokens = parse(url)\n    let replace = {}\n\n    if (Array.isArray(args)) {\n      for (let len = tokens.length, i=0, j=0; i<len; i++) {\n        if (tokens[i].name) replace[tokens[i].name] = args[j++]\n      }\n    } else if (tokens.some(token => token.name)) {\n      replace = params\n    } else {\n      options = params\n    }\n\n    replaced = toPath(replace)\n    if (options && options['query']) {\n      const query = options['query']\n      const q = typeof query == 'string' ? query : stringify(query)\n      return `${replaced}?${q}`\n    }\n\n    return replaced\n  }\n  /**\n   * Run validations on route named parameters.\n   *\n   * @example\n   *\n   * ```javascript\n   * router\n   *   .param('user', function (id, ctx, next) {\n   *     ctx.user = users[id];\n   *     if (!user) return ctx.status = 404;\n   *     next();\n   *   })\n   *   .get('/users/:user', function (ctx, next) {\n   *     ctx.body = ctx.user;\n   *   });\n   * ```\n   *\n   * @param {string} param\n   * @param {!Function} middleware\n   */\n  param(param, middleware) {\n    function mw (ctx, next) {\n      return middleware.call(this, ctx.params[param], ctx, next)\n    }\n    mw.param = param\n\n    const names = this.paramNames.map(({ name }) => name)\n\n    const x = names.indexOf(param)\n    if (x > -1) {\n      // iterate through the stack, to figure out where to place the handler fn\n      this.stack.some((fn, i) => {\n        // param handlers are always first, so when we find an fn w/o a param property, stop here\n        // if the param handler at this part of the stack comes after the one we are adding, stop here\n        if (!fn.param || names.indexOf(fn.param) > x) {\n          // inject this param handler right before the current item\n          this.stack.splice(i, 0, mw)\n          return true // then break the loop\n        }\n      })\n    }\n\n    return this\n  }\n\n  /**\n   * Prefix route path.\n   * @param {string} prefix\n   */\n  setPrefix(prefix) {\n    if (this.path) {\n      this.path = prefix + this.path\n      this.paramNames = []\n      const path = this.path\n      this.regexp = pathToRegExp(typeof path == 'string' ? path.replace(/\\/$/, '') : path,\n        this.paramNames, this.opts)\n    }\n\n    return this\n  }\n}\n\n\n/**\n * Safe decodeURIComponent, won't throw any error.\n * If `decodeURIComponent` error happen, just return the original value.\n *\n * @param {string} text\n */\nfunction safeDecodeURIComponent(text) {\n  try {\n    return decodeURIComponent(text)\n  } catch (e) {\n    return text\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').LayerConfig} _goa.LayerConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */","export default querystring\nexport const {\n  decode,\n  encode,\n  escape,\n  parse,\n  stringify,\n  unescape,\n} = querystring","/*!\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\n\nimport Debug from '@idio/debug'\nimport compose from '@goa/compose'\nimport HttpError from '@goa/http-errors'\nimport { METHODS } from 'http'\nimport Layer from './layer'\n\nconst debug = Debug('@goa/router')\n\n/**\n * @implements {_goa.Router}\n */\nexport default class Router {\n  /**\n   * Create a new router.\n   * @param {!_goa.RouterConfig} [opts]\n   */\n  constructor(opts = {}) {\n    const { methods = [\n      'HEAD',\n      'OPTIONS',\n      'GET',\n      'PUT',\n      'PATCH',\n      'POST',\n      'DELETE',\n    ] } = opts\n    this.opts = opts\n    /** @type {!Array<string>} */\n    this.methods = methods\n\n    this.params = {}\n    /**\n     * @type {!Array<!Layer>}\n     */\n    this.stack = []\n  }\n  /**\n   * Returns the middleware with allowed methods.\n   * @param {_goa.AllowedMethodsOptions} options\n   */\n  allowedMethods(options = {}) {\n    const { throw: t = false, notImplemented, methodNotAllowed } = options\n\n    /** @type {!_goa.Middleware} */\n    const mw = async (ctx, next) => {\n      await next()\n      const allowed = {}\n      const { status = 404 } = ctx\n\n      if (status == 404) {\n        ctx.matched.forEach((route) => {\n          route.methods.forEach((method) => {\n            allowed[method] = method\n          })\n        })\n\n        const allowedArr = Object.keys(allowed)\n\n        if (!this.methods.includes(ctx.method)) {\n          if (t) {\n            let notImplementedThrowable\n            if (typeof notImplemented == 'function') {\n              notImplementedThrowable = notImplemented() // set whatever the user returns from their function\n            } else {\n              notImplementedThrowable = new HttpError['NotImplemented']()\n            }\n            throw notImplementedThrowable\n          } else {\n            ctx.status = 501\n            ctx.set('Allow', allowedArr.join(', '))\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method == 'OPTIONS') {\n            ctx.status = 200\n            ctx.body = ''\n            ctx.set('Allow', allowedArr.join(', '))\n          } else if (!allowed[ctx.method]) {\n            if (t) {\n              let notAllowedThrowable\n              if (typeof methodNotAllowed == 'function') {\n                notAllowedThrowable = methodNotAllowed() // set whatever the user returns from their function\n              } else {\n                notAllowedThrowable = new HttpError['MethodNotAllowed']()\n              }\n              throw notAllowedThrowable\n            } else {\n              ctx.status = 405\n              ctx.set('Allow', allowedArr.join(', '))\n            }\n          }\n        }\n      }\n    }\n    return mw\n  }\n\n  /**\n   * Redirect `source` to `destination` URL with optional 30x status `code`.\n   * Both `source` and `destination` can be route names.\n   *\n   * @param {string} source URL or route name.\n   * @param {string} destination URL or route name.\n   * @param {number} [code] HTTP status code (default: 301).\n   */\n  redirect(source, destination, code = 301) {\n    // lookup source route by name\n    if (source[0] != '/') {\n      const s = this.url(source)\n      if (s instanceof Error) throw s\n      source = s\n    }\n\n    // lookup destination route by name\n    if (destination[0] != '/') {\n      const d = this.url(destination)\n      if (d instanceof Error) throw d\n      destination = d\n    }\n\n    return this['all'](source, ctx => {\n      ctx.redirect(destination)\n      ctx.status = /** @type {number} */ (code)\n    })\n  }\n\n  /**\n   * Create and register a route.\n   *\n   * @param {string|!Array<string>|RegExp} path The path string or an array of paths.\n   * @param {!Array<string>} methods Array of HTTP verbs.\n   * @param {!_goa.Middleware|!Array<!_goa.Middleware>} middleware Multiple middleware also accepted.\n   * @param {!Object} [opts]\n   * @private\n   */\n  register(path, methods, middleware, opts = {}) {\n    const { ignoreCaptures, prefix = this.opts.prefix || '',\n      strict = this.opts.strict || false, end = true, name,\n      sensitive = this.opts.sensitive || false } = opts\n\n    // support array of paths\n    if (Array.isArray(path)) {\n      path.forEach((p) => {\n        this.register(p, methods, middleware, opts)\n      })\n\n      return this\n    }\n\n    // create route\n    const route = new Layer(path, methods, middleware, {\n      end,\n      name,\n      sensitive,\n      strict,\n      prefix,\n      ignoreCaptures,\n    })\n\n    if (this.opts.prefix) {\n      route.setPrefix(this.opts.prefix)\n    }\n\n    // add parameter middleware\n    Object.keys(this.params).forEach((param) => {\n      route.param(param, this.params[param])\n    })\n\n    this.stack.push(route)\n\n    return route\n  }\n\n  /**\n   * Lookup route with given `name`.\n   * @param {string} name\n   */\n  route(name) {\n    const routes = this.stack\n\n    for (let len = routes.length, i=0; i<len; i++) {\n      if (routes[i].name && routes[i].name == name) {\n        return routes[i]\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * Generate URL for route. Takes a route name and map of named `params`.\n   * @param {string} name route name\n   * @param {...!Object} params url parameters and options\n   */\n  url(name, ...params) {\n    const route = this.route(name)\n\n    if (route)\n      return route.url(...params)\n\n    return new Error(`No route found for name: ${name}`)\n  }\n\n  /**\n   * Match given `path` and return corresponding routes.\n   *\n   * @param {string} path\n   * @param {string} method\n   * path and method.\n   * @private\n   */\n  match(path, method) {\n    const layers = this.stack\n    let layer\n    const matched = {\n      /** @type {!Array<!Layer>} */\n      path: [],\n      /** @type {!Array<!Layer>} */\n      pathAndMethod: [],\n      route: false,\n    }\n\n    for (let len = layers.length, i = 0; i < len; i++) {\n      layer = layers[i]\n\n      debug('test %s %s', layer.path, layer.regexp)\n\n      if (layer.match(path)) {\n        matched.path.push(layer)\n\n        if (layer.methods.length == 0 || layer.methods.includes(method)) {\n          matched.pathAndMethod.push(layer)\n          if (layer.methods.length) matched.route = true\n        }\n      }\n    }\n\n    return matched\n  }\n\n  /**\n   * Run middleware for named route parameters. Useful for auto-loading or\n   * validation.\n   * @param {string} param\n   * @param {!_goa.Middleware} middleware\n   */\n  param(param, middleware) {\n    this.params[param] = middleware\n    this.stack.forEach((route) => {\n      route.param(param, middleware)\n    })\n    return this\n  }\n\n  /**\n   * Generate URL from url pattern and given `params`.\n   * @param {string} path Url pattern.\n   * @param {!Array<!Object>} params Url parameters.\n   */\n  static url(path, ...params) {\n    return Layer.prototype.url.apply(/** @type {!Layer} */ ({ path }), params)\n  }\n  /**\n   * Set the path prefix for a Router instance that was already initialized.\n   * @param {string} prefix The prefix to set.\n   */\n  prefix(prefix) {\n    prefix = prefix.replace(/\\/$/, '')\n\n    this.opts.prefix = prefix\n\n    this.stack.forEach((route) => {\n      route.setPrefix(prefix)\n    })\n\n    return this\n  }\n  /**\n   * Use given middleware.\n   *\n   * Middleware run in the order they are defined by `.use()`. They are invoked\n   * sequentially, requests start at the first middleware and work their way\n   * \"down\" the middleware stack.\n   *\n   * @param {string|Array<string>|!_goa.Middleware} path\n   * @param {...!_goa.Middleware} middleware\n   */\n  use(path, ...middleware) {\n    // support array of paths\n    if (Array.isArray(path) && typeof path[0] == 'string') {\n      path.forEach((p) => {\n        this.use(p, ...middleware)\n      })\n      return this\n    }\n\n    const hasPath = typeof path == 'string'\n    if (!hasPath) {\n      middleware.unshift(path)\n      path = null\n    }\n\n    middleware.forEach((m) => {\n      const router = /** @type {Router} */ (m.router)\n      if (router) {\n        router.stack.forEach((nestedLayer) => {\n          if (path) nestedLayer.setPrefix(/** @type {string} */ (path))\n          if (this.opts.prefix) nestedLayer.setPrefix(this.opts.prefix)\n          this.stack.push(nestedLayer)\n        })\n\n        if (this.params) {\n          Object.keys(this.params).forEach((key) => {\n            router.param(key, this.params[key])\n          })\n        }\n      } else {\n        this.register(/** @type {string} */ (path || '(.*)'), [], m, { end: false, ignoreCaptures: !hasPath })\n      }\n    })\n\n    return this\n  }\n  get routes() {\n    return this.middleware\n  }\n  /**\n   * Returns router middleware which dispatches a route matching the request.\n   */\n  middleware() {\n    /**\n     * @type {!_goa.Middleware}\n     */\n    const dispatch = (ctx, next) => {\n      debug('%s %s', ctx.method, ctx.path)\n\n      const path = this.opts.routerPath || ctx.routerPath || ctx.path\n      const matched = this.match(path, ctx.method)\n      let layerChain\n\n      if (ctx.matched) {\n        ctx.matched.push(matched.path)\n      } else {\n        ctx.matched = matched.path\n      }\n\n      ctx.router = this\n\n      if (!matched.route) return next()\n\n      const matchedLayers = matched.pathAndMethod\n      const mostSpecificLayer = matchedLayers[matchedLayers.length - 1]\n      ctx._matchedRoute = mostSpecificLayer.path\n      if (mostSpecificLayer.name) {\n        ctx._matchedRouteName = mostSpecificLayer.name\n      }\n\n      layerChain = matchedLayers.reduce((acc, layer) => {\n        /**\n         * @type {!_goa.Middleware}\n         */\n        const link = (c, n) => {\n          c.captures = layer.captures(path)\n          c.params = layer.params(path, c.captures, c.params)\n          c.routerName = layer.name\n          return n()\n        }\n        acc.push(link)\n        return acc.concat(layer.stack)\n      }, [])\n\n      return compose(layerChain)(ctx, next)\n    }\n\n    dispatch.router = this\n\n    return dispatch\n  }\n}\n\nRouter['url'] = Router.url // eslint-disable-line\n\nexport const methods = METHODS.map((m) => m.toLowerCase())\n\n;[...methods, 'all'].forEach((method) => {\n  /**\n   * A verb.\n   * @this {_goa.Router}\n   */\n  function m(name, path, ...middleware) {\n    let mw\n\n    if (typeof path == 'string' || path instanceof RegExp) {\n      mw = middleware\n    } else {\n      mw = [path, ...middleware]\n      path = name\n      name = null\n    }\n\n    this.register(path, method == 'all' ? methods : [method], mw, {\n      name,\n    })\n\n    return this\n  }\n  Router.prototype[method] = m\n  if (method == 'delete') {\n    Router.prototype['del'] = m\n  }\n})\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').RouterConfig} _goa.RouterConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').AllowedMethodsOptions} _goa.AllowedMethodsOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */","import '../types/externs'\nimport '@externs/goa'\nimport Router from './'\n\nmodule.exports = {\n  '_Router': Router,\n}"],
"names":["$jscompDefaultExport","tty","format","inspect","util","val","options","type","length","parse","isFinite","long","msAbs","Math","abs","ms","d","plural","h","m","s","round","Error","JSON","stringify","str","String","match","exec","n","parseFloat","toLowerCase","y","w","name","formatThousandsRegExp","formatDecimalsRegExp","map","pow","value","Number","mag","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","unit","toFixed","replace","colors","c","string","color","cc","v","inspectOpts","Object","keys","process","env","filter","key","test","reduce","obj","prop","substring","_","k","toUpperCase","NodeEnv","init","debug","log","args","stderr","write","formatArgs","namespace","uc","diff","colorCode","prefix","split","join","push","toISOString","Date","save","namespaces","load","useColors","isatty","fd","formatters","o","opts","O","f","getDebug","enabled","curr","prevTime","prev","coerce","unshift","index","formatter","call","splice","apply","createDebug","instances","selectColor","hash","i","charCodeAt","enable","names","skips","len","RegExp","substr","instance","Debug","indexOf","setup","destroy","debug.destroy","extend","debug.extend","ns","delimiter","newDebug","stack","message","node","compose","middleware","Array","isArray","TypeError","fn","context","next","dispatch","Promise","reject","resolve","bind","err","codes","populateStatusesMap","statuses","status","arr","statusCodes","forEach","code","parseInt","isNaN","createError","msg","props","arg","statusCode","emitWarning","HttpError","charAt","captureStackTrace","expose","headers","CodeError","toIdentifier","className","token","slice","METHODS","http","lexer","tokens","char","j","count","pattern","prefixes","defaultPattern","escapeString","result","path","tryConsume","mustConsume","nextType","consumeText","suffix","modifier","open","compile","encode","encodeURIComponent","tokensToFunction","reFlags","flags","x","validate","matches","data","optional","repeat","segment","typeOfMessage","sensitive","arrayToRegexp","paths","parts","pathToRegexp","source","tokensToRegexp","strict","start","end","endsWith","route","mod","endToken","isEndDelimited","groups","querystring","setPrefix","paramNames","regexp","pathToRegExp","Layer","methods","method","l","toString","captures","params","decodeURIComponent","text","e","ignoreCaptures","url","toPath","arguments","some","replaced","query","q","param","mw","ctx","Router","t","notImplemented","methodNotAllowed","allowed","matched","allowedArr","includes","notImplementedThrowable","set","body","notAllowedThrowable","destination","redirect","p","register","routes","layers","layer","pathAndMethod","use","hasPath","router","nestedLayer","routerPath","matchedLayers","mostSpecificLayer","_matchedRoute","_matchedRouteName","layerChain","acc","link","routerName","concat","prototype","module","exports"]
}
